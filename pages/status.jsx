import { useEffect, useState } from 'react';
import { supabase } from '../lib/supabaseClient';
import { useRouter } from 'next/router';
import styles from '../styles/Status.module.css';
import { useUser } from '../context/UserContext'; // üëà –¥–æ–±–∞–≤–∏–ª–∏
import { withAdminGuard } from '../lib/withAdminGuard';

function StatusPage() {
  const [connectionStatus, setConnectionStatus] = useState(null);
  const [isConnected, setIsConnected] = useState(false);
  const router = useRouter();
  const { user } = useUser(); // üëà –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  useEffect(() => {
    if (!user || user.role !== 'admin') {
      router.replace('/');
    } else {
      checkConnection();
    }
  }, [user]);

  const checkConnection = async () => {
    const { error } = await supabase.from('repairs').select('id').limit(1);

    if (error) {
      setConnectionStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
      setIsConnected(false);
    } else {
      setConnectionStatus('–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
      setIsConnected(true);
    }
  };

  // –ü–æ–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º
  if (!user || user.role !== 'admin') return null;

  return (
    <div className={styles.container}>
      <h1 className={styles.title}>–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</h1>

      <div className={styles.status}>
        <p>{connectionStatus}</p>
        <p>–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {isConnected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ'}</p>
      </div>

      <div className={styles.buttonContainer}>
        <button
          className={styles.buttonBack}
          onClick={() => router.push('/admin')}
        >
          –ù–∞–∑–∞–¥
        </button>
      </div>
    </div>
  );
}
export default withAdminGuard(StatusPage);